#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE { MODE_FULL, MODE_WIN };

	// Dynamic 컴포넌트 경우 매 프레임마다 갱신해야하는 컴포넌트 집단
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum INFO { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	enum TEXTUREID { TEX_NORMAL, TEX_CUBE, TEX_END };

	enum RENDERID { RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_ALPHATEST, RENDER_UI, RENDER_PARTICLE, RENDER_END };

	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };


	enum WEAPON { CLAYMORE, MINIGUN, STAFF, SHOTGUN, REVOLVER, ROCKET_LAUNCHER,REACTOR,WEAPON_END };
	enum ITEMTYPE { ITEM_INIT, BULLET, EXP, HEALTH, KEY, MANA };

	enum PORTALID { PORTAL_A, PORTAL_B, PORTAL_C, PORTAL_END }; // 포탈 ID에 따라 지정된 좌표로 이동
	enum TOGGLEID { TOG_RED, TOG_YELLOW, TOG_BLUE, TOG_NORMAL, TOG_END };
	enum DOORID { DOOR_RED, DOOR_YELLOW, DOOR_BLUE, DOOR_GREY, DOOR_AUTO, DOOR_END };
	enum BOXID { BOX_NORMAL, BOX_EXPL, PILLAR, THORN, BROKEN_WALL, BROKEN_DOOR, BOX_END };
	enum BARTYPE { BAR_HEALTH, BAR_MANA, BAR_BULLET };
	enum DECOID { DECO_CORPSE, DECO_LAMP, DECO_LIGHTPOST, DECO_SIREN, DECO_END };
	enum BULLETID { BULLET_LOOKER, BULLET_FLAMER, BULLET_SLOW, BULLET_MAGIC, BULLET_SPIRAL, BULLET_END };
	enum CHANNELID {
		MONSTER_A, MONSTER_B, MONSTER_C, MONSTER_D, MONSTER_E, MONSTER_F, MONSTER_G, MONSTER_H, MONSTER_I, MONSTER_J,
		EFFECT, BGM, MONSTERSOUND, BOSSSOUND, CHANGESOUND, PROPSOUND, FIRESOUND, WARPSOUND, EARTHQUAKESOUND, EXITSOUND, THINGYSOUND, MAXCHANNEL
	};
	enum FXID {
		FX_OVERKILL, FX_FIREDEATH, FX_MAGICDEATH, FX_MAGICBOOM, FX_MAGICBLAST,
		FX_BLOOD_RED, FX_BLOOD_YELLOW, FX_BLOOD_GREEN, FX_BLOOD_BLACK, FX_BULLET, FX_ROCKET,
		FX_EXPL, FX_STAFF,
		FX_END
	};
	enum LIGHTID { LIGHT_DEFAULT, LIGHT_SHOOT, LIGHT_REACTOR, LIGHT_ROCKET, LIGHT_LAMP, LIGHT_SPOT, LIGHT_END };
	enum MATERIALID { MTRL_DEFAULT, MTRL_SHOOT, MTRL_REACTOR, MTRL_SIREN, MTRL_END };
	enum PLAYERBULLETTYPE { PB_NONE, PB_ROCKET, PB_STAFF, PB_REACTOR, PB_CLAYMORE, PB_LASER, PB_END };


	enum SpawnGroup
	{
		SPAWN0,
		SPAWN1,
		SPAWN2,
		SPAWN3,
		SPAWN4,
		SPAWN5,
		SPAWN6,
		SPAWN7,
		SPAWN8,
		SPAWN9,
		SPAWN10,
		SPAWN11,
		SPAWN12,
		SPAWN_END,
		SPAWN_NONE = 99
	};

	enum Collider_Type
	{
		CT_Radius,
		CT_Bound,
		CT_END
	};

	enum OBJ_TYPE
	{
		OT_PLAYER,
		OT_MONSTER,
		OT_ITEM,
		OT_PLAYER_BULLET,
		OT_MONSTER_BULLET,
		OT_BULLET_CASE,
		OT_WALL,
		OT_CEILING,
		OT_FLOOR,
		OT_PASSPROP,
		OT_NONPASSPROP,
		OT_BOMB,
		OT_SPAWNTOGGLE,
		OT_LIGHTTOGGLE,
		OT_END,
		OT_NONE
	};

	


}

#endif // Engine_Enum_h__
